package main

import (
	"fmt"
	"log"
	"net"
	"os"

	"github.com/joho/godotenv"
)

func main() {
	// Load .env file
	err := godotenv.Load()
	if err != nil {
		log.Panicf("Error loading .env file: %v", err.Error())
	}

	// Setup server connection information
	protocol := os.Getenv("PROTOCOL")
	serverAddress := os.Getenv("SERVER_ADDRESS")
	serverPort := os.Getenv("SERVER_PORT")
	serverURL := serverAddress + ":" + serverPort

	// Establish a single connection to the server
	serverConnection, err := net.Dial(protocol, serverURL)
	if err != nil {
		log.Panicf("Error connecting to the server: %v", err.Error())
	}
	defer serverConnection.Close()

	fmt.Printf("Connected to server on %s\n", serverURL)

	// Making a loop to read incoming messages from the server
	for {
		buffer := make([]byte, 1024)
		_, err := serverConnection.Read(buffer)
		fmt.Printf("Server says: %s", string(buffer))

		// If the given error is EOF, then the server has closed the connection
		if err != nil {
			if err.Error() == "EOF" {
				fmt.Println("Server has closed the connection")
				break
			}
			log.Panicf("Error reading: %v", err.Error())
		}
	}
}
